plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.6.5'
}
version = "1.3.1"

group 'io.github.lmikoto'

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.2'
    compileOnly 'org.projectlombok:lombok:1.18.2'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.2'
    testCompileOnly 'org.projectlombok:lombok:1.18.2'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.3'
    compile group: 'org.apache.dubbo', name: 'dubbo', version: '2.7.8'
    compile group: 'org.apache.dubbo', name: 'dubbo-registry-nacos', version: '2.7.8'
    compile group: 'org.apache.dubbo', name: 'dubbo-registry-zookeeper', version: '2.7.8'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version '2020.1'
    plugins = ['java']
}
patchPluginXml {
    changeNotes """
      1.0.0 提供Dubbo本地调用功能.<br>
      1.1.0 提供Nacos注册中心调用功能.<br>
      1.2.0 提供代理功能.<br>
      1.3.0 提供Zookeeper注册中心调用功能.<br>
      """
    sinceBuild '201'
    untilBuild '203.*'
}
def t = hasProperty('publishToken') ? publishToken : System.getenv('publishToken')
publishPlugin {
    token t
}

task release{
    doLast {
        def dir = System.getProperty("user.dir")
        def path = dir + "/build.gradle"
        def content = ""
        def line = 0
        def vs = project.hasProperty('v') ? v : System.getenv('v')
        new File(path).withReader('UTF-8') { reader ->
            reader.eachLine {
                if (line == 4) {
                    it = "version = \"" + vs + "\""
                }
                content <<= it
                content << '\n'
                line ++;
            }
        }

        new File(path).withWriter('UTF-8') { writer -> writer.append(content)}
        def add = "git add .".execute()
        add.waitFor()
        def commit = "git commit -m release${vs}".execute()
        commit.waitFor()
        "git tag ${vs}".execute()
        "git push --tags".execute()
        "git push".execute()
    }
}

